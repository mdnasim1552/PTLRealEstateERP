//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace RealERPWEB.HrWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HrDailyAttenSoap", Namespace="http://tempuri.org/")]
    public partial class HrDailyAtten : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback CountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDailyAttenDanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDailyAttenDanceRup02OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDailyAttenDance02OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDailyAttenDanceAlliOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDailyAttenDanceCredenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDailyAttenDanceAssureOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public HrDailyAtten() {
            this.Url = global::RealERPWEB.Properties.Settings.Default.RealERPWEB_HrWebService_HrDailyAtten;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event CountryCompletedEventHandler CountryCompleted;
        
        /// <remarks/>
        public event GetDailyAttenDanceCompletedEventHandler GetDailyAttenDanceCompleted;
        
        /// <remarks/>
        public event GetDailyAttenDanceRup02CompletedEventHandler GetDailyAttenDanceRup02Completed;
        
        /// <remarks/>
        public event GetDailyAttenDance02CompletedEventHandler GetDailyAttenDance02Completed;
        
        /// <remarks/>
        public event GetDailyAttenDanceAlliCompletedEventHandler GetDailyAttenDanceAlliCompleted;
        
        /// <remarks/>
        public event GetDailyAttenDanceCredenceCompletedEventHandler GetDailyAttenDanceCredenceCompleted;
        
        /// <remarks/>
        public event GetDailyAttenDanceAssureCompletedEventHandler GetDailyAttenDanceAssureCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Country", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Country() {
            object[] results = this.Invoke("Country", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CountryAsync() {
            this.CountryAsync(null);
        }
        
        /// <remarks/>
        public void CountryAsync(object userState) {
            if ((this.CountryOperationCompleted == null)) {
                this.CountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCountryOperationCompleted);
            }
            this.InvokeAsync("Country", new object[0], this.CountryOperationCompleted, userState);
        }
        
        private void OnCountryOperationCompleted(object arg) {
            if ((this.CountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CountryCompleted(this, new CountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDailyAttenDance", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDailyAttenDance(string frmdate, string ToDate) {
            object[] results = this.Invoke("GetDailyAttenDance", new object[] {
                        frmdate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDailyAttenDanceAsync(string frmdate, string ToDate) {
            this.GetDailyAttenDanceAsync(frmdate, ToDate, null);
        }
        
        /// <remarks/>
        public void GetDailyAttenDanceAsync(string frmdate, string ToDate, object userState) {
            if ((this.GetDailyAttenDanceOperationCompleted == null)) {
                this.GetDailyAttenDanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDailyAttenDanceOperationCompleted);
            }
            this.InvokeAsync("GetDailyAttenDance", new object[] {
                        frmdate,
                        ToDate}, this.GetDailyAttenDanceOperationCompleted, userState);
        }
        
        private void OnGetDailyAttenDanceOperationCompleted(object arg) {
            if ((this.GetDailyAttenDanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDailyAttenDanceCompleted(this, new GetDailyAttenDanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDailyAttenDanceRup02", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDailyAttenDanceRup02(string frmdate, string ToDate) {
            object[] results = this.Invoke("GetDailyAttenDanceRup02", new object[] {
                        frmdate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDailyAttenDanceRup02Async(string frmdate, string ToDate) {
            this.GetDailyAttenDanceRup02Async(frmdate, ToDate, null);
        }
        
        /// <remarks/>
        public void GetDailyAttenDanceRup02Async(string frmdate, string ToDate, object userState) {
            if ((this.GetDailyAttenDanceRup02OperationCompleted == null)) {
                this.GetDailyAttenDanceRup02OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDailyAttenDanceRup02OperationCompleted);
            }
            this.InvokeAsync("GetDailyAttenDanceRup02", new object[] {
                        frmdate,
                        ToDate}, this.GetDailyAttenDanceRup02OperationCompleted, userState);
        }
        
        private void OnGetDailyAttenDanceRup02OperationCompleted(object arg) {
            if ((this.GetDailyAttenDanceRup02Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDailyAttenDanceRup02Completed(this, new GetDailyAttenDanceRup02CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDailyAttenDance02", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDailyAttenDance02(string frmdate, string ToDate) {
            object[] results = this.Invoke("GetDailyAttenDance02", new object[] {
                        frmdate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDailyAttenDance02Async(string frmdate, string ToDate) {
            this.GetDailyAttenDance02Async(frmdate, ToDate, null);
        }
        
        /// <remarks/>
        public void GetDailyAttenDance02Async(string frmdate, string ToDate, object userState) {
            if ((this.GetDailyAttenDance02OperationCompleted == null)) {
                this.GetDailyAttenDance02OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDailyAttenDance02OperationCompleted);
            }
            this.InvokeAsync("GetDailyAttenDance02", new object[] {
                        frmdate,
                        ToDate}, this.GetDailyAttenDance02OperationCompleted, userState);
        }
        
        private void OnGetDailyAttenDance02OperationCompleted(object arg) {
            if ((this.GetDailyAttenDance02Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDailyAttenDance02Completed(this, new GetDailyAttenDance02CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDailyAttenDanceAlli", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDailyAttenDanceAlli(string frmdate, string ToDate) {
            object[] results = this.Invoke("GetDailyAttenDanceAlli", new object[] {
                        frmdate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDailyAttenDanceAlliAsync(string frmdate, string ToDate) {
            this.GetDailyAttenDanceAlliAsync(frmdate, ToDate, null);
        }
        
        /// <remarks/>
        public void GetDailyAttenDanceAlliAsync(string frmdate, string ToDate, object userState) {
            if ((this.GetDailyAttenDanceAlliOperationCompleted == null)) {
                this.GetDailyAttenDanceAlliOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDailyAttenDanceAlliOperationCompleted);
            }
            this.InvokeAsync("GetDailyAttenDanceAlli", new object[] {
                        frmdate,
                        ToDate}, this.GetDailyAttenDanceAlliOperationCompleted, userState);
        }
        
        private void OnGetDailyAttenDanceAlliOperationCompleted(object arg) {
            if ((this.GetDailyAttenDanceAlliCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDailyAttenDanceAlliCompleted(this, new GetDailyAttenDanceAlliCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDailyAttenDanceCredence", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDailyAttenDanceCredence(string frmdate, string ToDate) {
            object[] results = this.Invoke("GetDailyAttenDanceCredence", new object[] {
                        frmdate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDailyAttenDanceCredenceAsync(string frmdate, string ToDate) {
            this.GetDailyAttenDanceCredenceAsync(frmdate, ToDate, null);
        }
        
        /// <remarks/>
        public void GetDailyAttenDanceCredenceAsync(string frmdate, string ToDate, object userState) {
            if ((this.GetDailyAttenDanceCredenceOperationCompleted == null)) {
                this.GetDailyAttenDanceCredenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDailyAttenDanceCredenceOperationCompleted);
            }
            this.InvokeAsync("GetDailyAttenDanceCredence", new object[] {
                        frmdate,
                        ToDate}, this.GetDailyAttenDanceCredenceOperationCompleted, userState);
        }
        
        private void OnGetDailyAttenDanceCredenceOperationCompleted(object arg) {
            if ((this.GetDailyAttenDanceCredenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDailyAttenDanceCredenceCompleted(this, new GetDailyAttenDanceCredenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDailyAttenDanceAssure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDailyAttenDanceAssure(string frmdate, string ToDate) {
            object[] results = this.Invoke("GetDailyAttenDanceAssure", new object[] {
                        frmdate,
                        ToDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDailyAttenDanceAssureAsync(string frmdate, string ToDate) {
            this.GetDailyAttenDanceAssureAsync(frmdate, ToDate, null);
        }
        
        /// <remarks/>
        public void GetDailyAttenDanceAssureAsync(string frmdate, string ToDate, object userState) {
            if ((this.GetDailyAttenDanceAssureOperationCompleted == null)) {
                this.GetDailyAttenDanceAssureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDailyAttenDanceAssureOperationCompleted);
            }
            this.InvokeAsync("GetDailyAttenDanceAssure", new object[] {
                        frmdate,
                        ToDate}, this.GetDailyAttenDanceAssureOperationCompleted, userState);
        }
        
        private void OnGetDailyAttenDanceAssureOperationCompleted(object arg) {
            if ((this.GetDailyAttenDanceAssureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDailyAttenDanceAssureCompleted(this, new GetDailyAttenDanceAssureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void CountryCompletedEventHandler(object sender, CountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDailyAttenDanceCompletedEventHandler(object sender, GetDailyAttenDanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDailyAttenDanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDailyAttenDanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDailyAttenDanceRup02CompletedEventHandler(object sender, GetDailyAttenDanceRup02CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDailyAttenDanceRup02CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDailyAttenDanceRup02CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDailyAttenDance02CompletedEventHandler(object sender, GetDailyAttenDance02CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDailyAttenDance02CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDailyAttenDance02CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDailyAttenDanceAlliCompletedEventHandler(object sender, GetDailyAttenDanceAlliCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDailyAttenDanceAlliCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDailyAttenDanceAlliCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDailyAttenDanceCredenceCompletedEventHandler(object sender, GetDailyAttenDanceCredenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDailyAttenDanceCredenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDailyAttenDanceCredenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void GetDailyAttenDanceAssureCompletedEventHandler(object sender, GetDailyAttenDanceAssureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDailyAttenDanceAssureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDailyAttenDanceAssureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591